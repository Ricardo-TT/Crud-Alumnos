@model List<CrudAlumnos.Models.AlumnoViewModel>
@{
    ViewData["Title"] = "_AlumnosPartial";
    Layout = null;
}

<div class="container">
    <div class="row">
        <!-- AGREGAR UN NUEVO ALUMNO MODAL -->
        <div class="col-sm-3">
            <button id="Agregar" class="btn btn-outline-success d-block" type="button">
                <i class="bi bi-person-fill-add"></i>&nbsp;Agregar Nuevo Alumno
            </button>
        </div>
    </div>

    <table class="grid text-center table table-bordered table-striped">
        <thead>
            <tr>
                <td>Id del Alumno</td>
                <td>Nombre del Alumno</td>
                <td>Estatus</td>
                <td>Estado del Alumno</td>
                <td>Nombre del Grado</td>
                <td>Estado del Alumno</td>
                <td>Acciones</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Where(a => !a.EliminadoAlumno))
            {
                <tr>
                    <td>@item.AlumnoId</td>
                    <td>@item.NombreAlumno</td>
                    <td>@item.EstatusAlumno</td>
                    <td class="estado-alumno">
                        @if (item.EstadoAlumno)
                        {
                            <span>Activo</span>
                        }
                        else
                        {
                            <span>Inactivo</span>
                        }
                    </td>
                    <td>@item.NombreGrado</td>
                    <td>
                        <button class="btn estado-btn @(item.EstadoAlumno ? "btn-success" : "btn-outline-danger")" data-alumno-id="@item.AlumnoId" data-estado="@item.EstadoAlumno">
                            @(item.EstadoAlumno ? "Activo" : "Inactivo")
                        </button>
                    </td>
                    <td>
                        <a asp-controller="Alumnos" asp-action="Edit" asp-route-id="@item.AlumnoId" class="btn btn-warning"><i class="bi bi-person-fill-gear"></i>&nbsp; Editar</a>
                        <button class="btn btn-danger eliminar-btn" data-alumno-id="@item.AlumnoId">
                            <i class="bi bi-person-fill-x"></i>
                            Eliminar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- VENTANA MODAL CREAR -->
    <div id="ModalCrear" class="modal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body" id="ContenidoModalCrear">
                    <!-- VISTA DE CREAR -->
                </div>
            </div>
        </div>
    </div>

</div>

<script>
    $(document).ready(function () {

        //<----------  ABRIR VENTANA DE CREAR  ----------->

        $("#Agregar").click(function () {
            $.ajax({
                url: '@Url.Action("Create", "Alumnos")',
                type: 'GET',
                success: function (result) {
                    $("#ContenidoModalCrear").html(result);
                    $("#ModalCrear").modal("show"); //<----------  ABRIR MODAL ----------->
                },
                error: function () {
                    alert("Error");
                }
            });
        });

        //<----------  ACTUALIZAR ESTADO  ----------->
        $(".estado-btn").click(function () {
            console.log("Botón clickeado");
            var boton = $(this);

            var alumnoId = boton.data("alumno-id");
            var estadoActual = boton.data("estado");
            var nuevoEstado = !estadoActual;

            $.ajax({
                url: '@Url.Action("ActualizarEstado", "Alumnos")',
                type: 'POST',
                data: {
                    alumnoId: alumnoId,
                    nuevoEstado: nuevoEstado
                },
                success: function () {
                    //<----------  ACTUALIZAR ESTADO DE BOTON  ----------->
                    if (nuevoEstado) {
                        boton.removeClass("btn-outline-danger").addClass("btn-success").text("Activo");
                    } else {
                        boton.removeClass("btn-success").addClass("btn-outline-danger").text("Inactivo");
                    }

                    //<----------  AACTUALIZAR DATOS  ----------->
                    boton.data("estado", nuevoEstado);

                    //<----------  ACUTALIZA EL TEXTO  ----------->
                    var columnaEstado = boton.closest("tr").find("td.estado-alumno");
                    if (nuevoEstado) {
                        columnaEstado.text("Activo");
                    } else {
                        columnaEstado.text("Inactivo");
                    }
                },
                error: function () {
                    alert("Error al actualizar el estado del alumno");
                }
            });
        });

        //<----------  ELIMINAR ALUMNO  ----------->
        $(".eliminar-btn").click(function () {
            var boton = $(this);
            var alumnoId = boton.data("alumno-id");

            Swal.fire({
                title: '¿Estás seguro?',
                text: '¡No podrás revertir esto!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, eliminarlo'
            }).then((result) => {
                if (result.isConfirmed) { 
                    $.ajax({
                        url: '@Url.Action("Eliminar", "Alumnos")',
                        type: 'GET',
                        data: { id: alumnoId },
                        success: function () {
                            Swal.fire(
                                '¡Eliminado!',
                                'El alumno ha sido eliminado.',
                                'success'
                            ).then(() => {
                                //<----------  RECARGA PAGINA  ----------->
                                location.reload();
                            });
                        },
                        error: function () {
                            Swal.fire(
                                'Error',
                                'Hubo un error al eliminar el alumno.',
                                'error'
                            );
                        }
                    });
                }
            });
        });

    });
</script>
